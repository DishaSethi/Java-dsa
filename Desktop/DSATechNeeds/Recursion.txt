Recursion with arrays
(easy)
1. All Indices Of Array


My approach : 
import java.io.*;
import java.util.*;


public class Main1 {


    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[] arr = new int[n];


        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(br.readLine());
        }
        int x = Integer.parseInt(br.readLine());
        int[] iarr = allIndices(arr, x, 0, 0);


        if(iarr.length == 0){
            System.out.println();
            return;
        }


        for(int i = 0; i < iarr.length; i++){
            System.out.println(iarr[i]);
        }
    }


    public static int[] allIndices(int[] arr, int x, int idx, int fsf) {
        // write ur code here
if(arr.length==idx){
    return new int[fsf];
}
if(arr[idx]==x){
    fsf++;
}
int ans[]=allIndices(arr, x , idx+1,fsf);
if(arr[idx]==x){
    ans[fsf-1]=idx;
}
return ans;
    }


}


        Solution approach:
import java.io.*;
import java.util.*;


public class Main {


    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[] arr = new int[n];


        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(br.readLine());
        }
        int x = Integer.parseInt(br.readLine());
        int[] iarr = allIndices(arr, x, 0, 0);


        if(iarr.length == 0){
            System.out.println();
            return;
        }
        
        for(int i = 0; i < iarr.length; i++){
            System.out.println(iarr[i]);
        }
    }


    public static int[] allIndices(int[] arr, int x, int idx, int fsf) {
        if(idx == arr.length){
            return new int[fsf];
        }
        
        int[] iarr;


        if(arr[idx] == x){
            iarr = allIndices(arr, x, idx + 1, fsf + 1);
            iarr[fsf] = idx;
        } else {
            iarr = allIndices(arr, x, idx + 1, fsf);
        }
        
        return iarr;
    }


}




                        
                                
                                






Recursion with Arraylists


Get Subsequence(easy)


Solution:
import java.io.*;
import java.util.*;


public class Main {


    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String str = br.readLine();
        ArrayList<String> ss = gss(str);
        System.out.println(ss);
    }


    public static ArrayList<String> gss(String str) {
        if(str.length() == 0){
            ArrayList<String> bres = new ArrayList<>();
            bres.add("");
            return bres;
        }


        char ch = str.charAt(0);
        String ros = str.substring(1);


        ArrayList<String> rres = gss(ros);
        ArrayList<String> mres = new ArrayList<>();


        for(String rstr: rres){
            mres.add(rstr);
        }


        for(String rstr: rres){
            mres.add(ch + rstr);
        }
        return mres;
    }
}